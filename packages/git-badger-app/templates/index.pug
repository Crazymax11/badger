html
    head
        include head.pug
    body.is-size-5
        nav-header
        h1 Git badger
        h2 Badges that you deserve!
        last-activities
        div.section
            h4.subtitle.is-4 Available API
                table.table
                    thead
                        tr
                            th Method
                            th Url
                            th Description
                    tbody
                        tr
                            th POST
                            th /badges/:badge/:project
                            th with body {status: 'some status'} creates a new record to your project about current status of badge.
                        tr
                            th GET
                            th /badges/:badge/:project 
                            th redirects to https://shields.io svg badge with last badge status for your project
                        tr
                            th GET
                            th /badges/:project
                            th shows all badges for project
                        tr
                            th GET
                            th /badges/:badge/history/:project
                            th shows badge history for project
                        tr
                            th GET
                            th /status
                            th returns status of application and status of store.
                        tr
                            th GET
                            th /status/:badge/:project
                            th returns store status for given badge and project
                        tr
                            th GET
                            th /status/:badge
                            th returns store status for given badge
                        tr
                            th GET
                            th /status/projects/:project
                            th returns store status for given project
        section.section
            div.level
                h3.title.is-3.level-item Available badges

            each badge in badges
                section.container
                    h3.subtitle.is-3 #{badge.name}
                    div
                        span.content #{badge.description}
                        br
                        div.level
                            ul
                                each example in badge.examples
                                    - var link = getLink(badge.create(example))
                                    li
                                        img(src=''+link)
        section.section
            h3.title.is-3 Test section
            span.content Here you can try out badges
            form.box#post
                h3.title.is-3 Post new status
                p Post new status fot entered badge and project
                label.label project
                input.input(placeholder="my-awesome-project" name="project")
                label.label badge
                input.input(placeholder="eslint-errors" name="badge")
                label.label status
                input.input(placeholder="123" name="status")
                button.button.is-primary POST
                img
                span.is-danger
            form.box#get
                h3.title.is-3 Get status
                p Get last status as badge for entered project and badge
                label.label project
                input.input(placeholder="my-awesome-project" name="project")
                label.label badge
                input.input(placeholder="elsint-errors" name="badge")
                button.button.is-primary GET
                img
                span.help.is-danger
            script.
                document.querySelector('#post button').addEventListener('click', (event) => {
                    event.preventDefault();
                    const project = document.querySelector('#post [name="project"]').value;
                    const badge = document.querySelector('#post [name="badge"]').value;
                    const status = document.querySelector('#post [name="status"]').value;
                    console.log('POST', project, badge, status);
                    document.querySelector('#post .is-danger').textContent = '';
                    fetch(`/badges/${badge}/${project}`, {
                        method: 'post',
                        headers: {
                            "Content-type": "application/json"
                        },
                        body: JSON.stringify({status: String(status)})
                    })
                    .then(res => res.text())
                    .then(url => document.querySelector('#post img').src = url)
                    .catch((err) => {
                        console.error(err);
                        document.querySelector('#post .is-danger').textContent = err.toString();
                    })
                });

                document.querySelector('#get button').addEventListener('click', (event) => {
                    event.preventDefault();
                    const project = document.querySelector('#get [name="project"]').value;
                    const badge = document.querySelector('#get [name="badge"]').value;
                    console.log('GET', project, badge);
                    document.querySelector('#get img').src = `/badges/${badge}/${project}`;
                });
        footer.footer
            div.container
                span github